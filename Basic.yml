***************#48 Installation of Minikube*******************
#Single CONTAINER POD ENVIRONMENT pod1.yml

kind: Pod                              
apiVersion: v1                     
metadata:                           
  name: testpod1               
spec:                                    
  containers:                      
    - name: c00                     
      image: ubuntu              
      command: ["/bin/bash", "-c", "while true; do echo Hello-Rahul; sleep 5 ; done"]
  restartPolicy: Never         # Defaults to Always

kubectl apply -f pod1.yml

#MULTI CONTAINER POD ENVIRONMENT pod2.yml

kind: Pod
apiVersion: v1
metadata:
  name: testpod2
spec:
  containers:
    - name: c00
      image: ubuntu
      command: ["/bin/bash", "-c", "while true; do echo Pandey world; sleep 5 ; done"]
    - name: c01
      image: ubuntu
      command: ["/bin/bash", "-c", "while true; do echo Hello-Rahul; sleep 5 ; done"]


#POD ENVIRONMENT  VARIABLES pod3.yml

kind: Pod
apiVersion: v1
metadata:
  name: environments
spec:
  containers:
    - name: c00
      image: ubuntu
      command: ["/bin/bash", "-c", "while true; do echo Hello-Rahul; sleep 5 ; done"]
      env:                        # List of environment variables to be used inside the pod
      - name: MYNAME
        value: Rahul

#POD WITH PORTS pod4.yml

kind: Pod
apiVersion: v1
metadata:
  name: testpod4
spec:
  containers:
    - name: c00
      image: httpd
      ports:
       - containerPort: 80  
	   

******************YAML Files used in demo*************************
49. Labels,Selectors,Replication-Controller and replica-set in Kubernetes

#LABELS pod5.yml

kind: Pod
apiVersion: v1
metadata:
  name: delhipod
  labels:                                                   
    env: development
    class: pods
spec:
    containers:
       - name: c00
         image: ubuntu
         command: ["/bin/bash", "-c", "while true; do echo Hello-Rahul; sleep 5 ; done"]


# NODE SELECTOR EXAMPLE pod6.yml

kind: Pod
apiVersion: v1
metadata:
  name: nodelabels
  labels:
    env: development
spec:
    containers:
       - name: c00
         image: ubuntu
         command: ["/bin/bash", "-c", "while true; do echo Hello-Rahul; sleep 5 ; done"]
    nodeSelector:                                         
       hardware: t2-medium

#EXAMPLE OF REPLICATION CONTROLLER rc1.yml

kind: ReplicationController               
apiVersion: v1
metadata:
  name: myreplica
spec:
  replicas: 2            
  selector:        
    myname: Rahul Rajput                             
  template:                
    metadata:
      name: testpod6
      labels:            
        myname: Rahul
    spec:
     containers:
       - name: c00
         image: ubuntu
         command: ["/bin/bash", "-c", "while true; do echo Hello-Rahul; sleep 5 ; done"]


# EXAMPLE OF REPLICA SET rs1.yml

kind: ReplicaSet                                    
apiVersion: apps/v1                            
metadata:
  name: myrs
spec:
  replicas: 2  
  selector:                  
    matchExpressions:                             # these must match the labels
      - {key: myname, operator: In, values: [Rahul, Rakesh, Rajesh]}
      - {key: env, operator: NotIn, values: [production]}
  template:      
    metadata:
      name: testpod7
      labels:              
        myname: Rahul
    spec:
     containers:
       - name: c00
         image: ubuntu
         command: ["/bin/bash", "-c", "while true; do echo Pandey world; sleep 5 ; done"]
		 
50. Deployment Object in Kubernetes-
#deploy1.yml

kind: Deployment
apiVersion: apps/v1
metadata:
   name: mydeployments
spec:
   replicas: 2
   selector:     
    matchLabels:
     name: deployment
   template:
     metadata:
       name: testpod
       labels:
         name: deployment
     spec:
      containers:
        - name: c00
          image: ubuntu
          command: ["/bin/bash", "-c", "while true; do echo Pandey world; sleep 5; done"]
